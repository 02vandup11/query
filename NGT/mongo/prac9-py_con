import pymongo
print("hello9")
myclient = pymongo.MongoClient("mongodb://localhost:27017/")

#create db
mydb = myclient["ADMINDB"]
print(mydb)
print(myclient.list_database_names())

#create collection
mycol = mydb["ADMINCOL"]
print(mydb.list_collection_names())
'''
#insert info
admin_info = [
  { "_id": 1, "name": "John", "address": "Highway 37"},
  { "_id": 2, "name": "Peter", "address": "Lowstreet 27"},
  { "_id": 3, "name": "Amy", "address": "Apple st 652"},
  { "_id": 4, "name": "Hannah", "address": "Mountain 21"},
  { "_id": 5, "name": "Michael", "address": "Valley 345"},
  { "_id": 6, "name": "Sandy", "address": "Ocean blvd 2"},
  { "_id": 7, "name": "Betty", "address": "Green Grass 1"},
  { "_id": 8, "name": "Richard", "address": "Sky st 331"},
  { "_id": 9, "name": "Susan", "address": "One way 98"},
  { "_id": 10, "name": "Vicky", "address": "Yellow Garden 2"},
  { "_id": 11, "name": "Ben", "address": "Park Lane 38"},
  { "_id": 12, "name": "William", "address": "Central st 954"},
  { "_id": 13, "name": "Chuck", "address": "Main Road 989"},
  { "_id": 14, "name": "Viola", "address": "Sideway 1633"}
]

x = mycol.insert_many(admin_info)

#print list of the _id values of the inserted documents:
print(x.inserted_ids)
'''
'''
#finding one value
x = mycol.find_one()
print(x)

#finding multiple values
for x in mycol.find():
  print(x)

#only specific values
for x in mycol.find({},{ "_id": 0, "name": 1, "address": 1 }):
  print(x)

#only specfic addresses
for x in mycol.find({},{ "address": 0 }):
  print(x)

#error
for x in mycol.find({},{ "name": 1, "address": 0 }):
  print(x)

#querry
#Filter the Result
#only one specific value
myquery = { "address": "Park Lane 38" }
mydoc = mycol.find(myquery)
for x in mydoc:
  print(x)

#gt
myquery = { "address": { "$gt": "S" } }
mydoc = mycol.find(myquery)
for x in mydoc:
  print(x)

#regularexp
myquery = { "address": { "$regex": "^S" } }
mydoc = mycol.find(myquery)
for x in mydoc:
  print(x)

#sortascending
mydoc = mycol.find().sort("name")
for x in mydoc:
  print(x)

#sortdescending
mydoc = mycol.find().sort("name", -1)
for x in mydoc:
  print(x)

#deleteone
myquery = { "address": "Mountain 21" }
mycol.delete_one(myquery)

#deletemanyspecificvalues
myquery = { "address": {"$regex": "^S"} }
x = mycol.delete_many(myquery)
print(x.deleted_count, " documents deleted.")

#deleteall
x = mycol.delete_many({})
print(x.deleted_count, " documents deleted.")

#drop collections
mycol.drop()

#updatevalues
#set
myquery = { "address": "Valley 345" }
newvalues = { "$set": { "address": "Canyon 123" } }
mycol.update_one(myquery, newvalues)
#print "customers" after the update:
for x in mycol.find():
  print(x)

#regres
myquery = { "address": { "$regex": "^S" } }
newvalues = { "$set": { "name": "Minnie" } }
x = mycol.update_many(myquery, newvalues)
print(x.modified_count, "documents updated.")

#limit
myresult = mycol.find().limit(2)
#print the result:
for x in myresult:
  print(x)
'''
